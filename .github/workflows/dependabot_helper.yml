name: Dependabot helper
on: pull_request

permissions:
  pull-requests: write
  issues: write
  repository-projects: write
  contents: write

jobs:
  dependency_changes:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.head.repo.fork && github.repository == 'Fusion-Power-Plant-Framework/bluemira' }}
    outputs:
      changed: ${{ steps.check_pyproject_change.outputs.changed }}
    steps:
      - name: Fetch depth
        run: echo "PR_FETCH_DEPTH=$(( ${{ github.event.pull_request.commits }} + 1 ))" >> "${GITHUB_ENV}"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}
          fetch-depth: ${{ env.PR_FETCH_DEPTH }}
      - name: Check pyproject
        env:
          DEPENDABOT: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
        id: check_pyproject_change
        run: |
          hasdiff=$(git diff --quiet HEAD~$((${{ env.PR_FETCH_DEPTH }} - 1)) HEAD pyproject.toml && echo 0 || echo 1)
          if [ $DEPENDABOT == 'true' ] ; then
            hasdiff=1
          fi
          echo "changed=$hasdiff" >> "$GITHUB_OUTPUT"

  dependabot:
    runs-on: ubuntu-latest
    needs: [dependency_changes]
    if: needs.dependency_changes.outputs.changed == 1
    steps:
      - name: Dependabot metadata
        if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
        id: metadata
        uses: dependabot/fetch-metadata@08eff52bf64351f401fb50d4972fa95b9f2c2d1b # v2.4
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - uses: actions/setup-python@v6
        with:
          python-version: "3.10"

      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}

      - name: Run uv
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip compile pyproject.toml --resolution=highest --python-version=3.10 --extra pinned -o requirements/uv/base.txt
          uv pip compile pyproject.toml --resolution=highest --python-version=3.10 --extra pinned -o requirements/uv/develop.txt --extra dev
          uv pip compile pyproject.toml --resolution=highest --python-version=3.10 --extra pinned -o requirements/uv/examples.txt --extra examples
          uv pip compile pyproject.toml --resolution=highest --python-version=3.10 --extra pinned -o requirements/uv/all.txt --extra dev --extra polyscope --extra radiation --extra examples
          git config user.email "49699333+dependabot[bot]@users.noreply.github.com"
          git config user.name "dependabot[bot]"
          git add requirements
          if [[ -n $(git status --porcelain) ]] ; then
            git commit -m "Updated dependencies in requirements files"
            git push
          fi

      - name: Update pre-commit
        if: contains(steps.metadata.outputs.dependency-names, 'ruff')
        shell: bash
        run: |
          pip install pre-commit
          pre-commit autoupdate || true  # pre-commit hooks is not a file
          git add .pre-commit-config.yaml
          if [[ -n $(git status --porcelain) ]] ; then
            git commit -m "Updated pre-commit"
            git push
          fi
          pre-commit run --all-files || true  # linter fixes returns non zero
          git add .
          if [[ -n $(git status --porcelain) ]] ; then
            git commit -m 'Linter fixes'
            git push
          fi
